{
	"id": 0,
	"name": "@eventstore/components",
	"kind": 0,
	"kindString": "Project",
	"flags": {},
	"children": [
		{
			"id": 1,
			"name": "Components",
			"kind": 2,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 2,
					"name": "EsAccordian",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3,
							"name": "sections",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "An array of sections to display."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 27,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 432,
									"name": "AccordianSection"
								}
							}
						},
						{
							"id": 4,
							"name": "steps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Display numbered counters beside each title."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 31,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3,
								4
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 23,
							"character": 14
						}
					]
				},
				{
					"id": 5,
					"name": "EsBackdrop",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 11,
							"name": "showBackdrop",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 36,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 6,
							"name": "close",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 34,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 7,
									"name": "close",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 8,
							"name": "renderNode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 35,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 9,
									"name": "renderNode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 10,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"name": "VNode"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								11
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								6,
								8
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 33,
							"character": 14
						}
					]
				},
				{
					"id": 12,
					"name": "EsBadge",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 13,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Choose the color variant of the badge"
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 42,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "BadgeColor"
							}
						},
						{
							"id": 14,
							"name": "count",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "What number to display in the counter (or if the dot should display)"
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 46,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 15,
							"name": "showZero",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Show the dot and counter even if the count 0 (or negative)"
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 50,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 16,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The base size (in px) of the counter (has no effect on the dot)"
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 54,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 17,
							"name": "variant",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Select the display variant of the badge"
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 58,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "BadgeVariant"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								13,
								14,
								15,
								16,
								17
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 38,
							"character": 14
						}
					]
				},
				{
					"id": 18,
					"name": "EsButton",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 19,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Which color pair the button should use."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 64,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "ButtonColor"
							}
						},
						{
							"id": 20,
							"name": "disabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "If the button is disabled. Prevents the user from interacting with the button: it cannot be pressed or focused."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 68,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 21,
							"name": "form",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The form element to associate the button with (it's form owner)."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 72,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 22,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The default behavior of the button."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 76,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 23,
							"name": "variant",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Which styling variant to use."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 80,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "ButtonVariant"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								19,
								20,
								21,
								22,
								23
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 60,
							"character": 14
						}
					]
				},
				{
					"id": 24,
					"name": "EsButtonLink",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 25,
							"name": "anchorClass",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Class for the contained anchor element"
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 86,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 26,
							"name": "anchorId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Id for the contained anchor element"
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 90,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27,
							"name": "anchorRole",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Role for the contained anchor element"
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 94,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28,
							"name": "anchorTabIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Tab Index for the contained anchor element"
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 98,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29,
							"name": "anchorTitle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Title for the contained anchor element"
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 102,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30,
							"name": "ariaHaspopup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 106,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31,
							"name": "ariaLabel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Fefines a string value that labels the current element."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 110,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32,
							"name": "ariaPosinset",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines an element's number or position in the current set of listitems or treeitems."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 114,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33,
							"name": "ariaSetsize",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the number of items in the current set of listitems or treeitems."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 118,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 34,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Which color pair the button should use."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 122,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "ButtonColor"
							}
						},
						{
							"id": 35,
							"name": "disabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "If the link is disabled. Prevents the user from interacting with the link: it cannot be pressed or focused."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 126,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 36,
							"name": "forceRefresh",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "If the button should navigate within the router context, or force a refresh."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 130,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 37,
							"name": "target",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Target for link (eg: target=\"_blank\")"
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 134,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Where the button should link to."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 138,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39,
							"name": "variant",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Which styling variant to use"
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 142,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "ButtonVariant"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								25,
								26,
								27,
								28,
								29,
								30,
								31,
								32,
								33,
								34,
								35,
								36,
								37,
								38,
								39
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 82,
							"character": 14
						}
					]
				},
				{
					"id": 40,
					"name": "EsCallout",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 41,
							"name": "heading",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Heading text."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 148,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 42,
							"name": "icon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Override the variant icon."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 152,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 43,
							"name": "variant",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Which color set to use."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 156,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "EsCalloutVariant"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								41,
								42,
								43
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 144,
							"character": 14
						}
					]
				},
				{
					"id": 44,
					"name": "EsCopy",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 45,
							"name": "copy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 162,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 46,
									"name": "copy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Manually triggers the copy of the inner text."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								45
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 158,
							"character": 14
						}
					]
				},
				{
					"id": 47,
					"name": "EsCounter",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 48,
							"name": "count",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The number to display"
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 168,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 49,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The height of the counter that the rest of the dimensions scale from"
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 172,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 50,
							"name": "variant",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The display style of the counter."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 176,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "CounterVariant"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								48,
								49,
								50
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 164,
							"character": 14
						}
					]
				},
				{
					"id": 51,
					"name": "EsIcon",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 52,
							"name": "angle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Rotate the icon to a speciied angle."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 182,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 53,
							"name": "icon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Which icon to display."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 186,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 54,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The hight and width to scale the icon to."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 190,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 55,
							"name": "spin",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Apply a spin animation."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 194,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 56,
							"name": "spinDirection",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "When spinning, should it spin clockwise or anticlockwise."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 198,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "clockwise"
									},
									{
										"type": "literal",
										"value": "antiClockwise"
									}
								]
							}
						},
						{
							"id": 57,
							"name": "spinEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 202,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 58,
									"name": "spinEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Provides a promise that resolves at the end of a single spin, if the icon is spinning."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								52,
								53,
								54,
								55,
								56
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								57
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 178,
							"character": 14
						}
					]
				},
				{
					"id": 59,
					"name": "EsModal",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 60,
							"name": "footer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "If the modal should have a footer."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 208,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 61,
							"name": "header",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "If the modal should have a header."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 212,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								60,
								61
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 204,
							"character": 14
						}
					]
				},
				{
					"id": 62,
					"name": "EsPopover",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 63,
							"name": "attachTo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Pass an element to attach the popover to. (Defaults to the parent element.)"
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 218,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLElement"
							}
						},
						{
							"id": 64,
							"name": "attachmentX",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The Y axis attachment location."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 222,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "AttachmentX"
							}
						},
						{
							"id": 65,
							"name": "attachmentY",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The Y axis attachment location."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 226,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "AttachmentY"
							}
						},
						{
							"id": 66,
							"name": "backdrop",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "If the popover should overlay a backdrop, to prevent external clicks."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 230,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 67,
							"name": "constrain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Constrain the size of the popover to the size of the attachment node."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 234,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Constrain"
							}
						},
						{
							"id": 68,
							"name": "offsetX",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The offset the X axis in pixels."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 238,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 69,
							"name": "offsetY",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The offset the Y axis in pixels."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 242,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 70,
							"name": "open",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Toggles if the popover is open or not."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 246,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 71,
							"name": "popperClass",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Class name for the popper"
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 250,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 72,
							"name": "positionX",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The X axis positioning location."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 254,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "PositionX"
							}
						},
						{
							"id": 73,
							"name": "positionY",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The Y axis positioning location."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 258,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "PositionY"
							}
						},
						{
							"id": 74,
							"name": "target",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "A query selecter to select the element to portal the popper to."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 262,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 75,
							"name": "trapFocus",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "If the popover should trap focus within, and return focus on close."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 266,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								63,
								64,
								65,
								66,
								67,
								68,
								69,
								70,
								71,
								72,
								73,
								74,
								75
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 214,
							"character": 14
						}
					]
				},
				{
					"id": 76,
					"name": "EsPopper",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 77,
							"name": "backdrop",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 269,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 78,
							"name": "trapFocus",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 270,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								77,
								78
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 268,
							"character": 14
						}
					]
				},
				{
					"id": 79,
					"name": "EsPopperInner",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 80,
							"name": "setPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 273,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 81,
									"name": "setPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 82,
											"name": "position",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Position"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								80
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 272,
							"character": 14
						}
					]
				},
				{
					"id": 83,
					"name": "EsPortal",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 86,
							"name": "backdrop",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "If the portal should overlay a backdrop, to prevent external clicks."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 280,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 89,
							"name": "element",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The element to render."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 285,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "VNode"
							}
						},
						{
							"id": 90,
							"name": "open",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "If the element is portaled or not."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 289,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 91,
							"name": "target",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "A query selector to select the location to portal to."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 293,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 84,
							"name": "attachElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 276,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 85,
									"name": "attachElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 87,
							"name": "detatchElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 281,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 88,
									"name": "detatchElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								86,
								89,
								90,
								91
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								84,
								87
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 275,
							"character": 14
						}
					]
				},
				{
					"id": 92,
					"name": "EsProgression",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 93,
							"name": "checkpoints",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "A list of checkpoints to display."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 299,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Checkpoint"
								}
							}
						},
						{
							"id": 94,
							"name": "location",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The current active location."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 303,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								93,
								94
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 295,
							"character": 14
						}
					]
				},
				{
					"id": 95,
					"name": "EsResizeObserver",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 305,
							"character": 14
						}
					]
				},
				{
					"id": 96,
					"name": "EsStatus",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 97,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 308,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Status"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								97
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 307,
							"character": 14
						}
					]
				},
				{
					"id": 98,
					"name": "EsTable",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 99,
							"name": "cells",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "A record of table cell definitions."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 314,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 438,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "TableCells"
							}
						},
						{
							"id": 100,
							"name": "columns",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The order and keys of the cells to be rendered. If omitted, all cells will be rendered."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 318,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 105,
							"name": "headless",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Do not render header."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 326,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 106,
							"name": "identifier",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Passed to cell renderer as `parent`."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 330,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 116,
							"name": "rowTakesFocus",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "If rows should be allowed to take focus"
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 348,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 117,
							"name": "rows",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "An array of rows to render. Each item in the array is passed to getCellData, to allow passing keys or other identifiers."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 352,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 101,
							"name": "getCellData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 322,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 102,
									"name": "getCellData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sync function for extracting the data from the row. By default, it assumes you passed an array of data as your columns."
									},
									"typeParameter": [
										{
											"id": 103,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"parameters": [
										{
											"id": 104,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 107,
							"name": "linkRowTo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 334,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 108,
									"name": "linkRowTo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "A function to calculate a href from the cell data."
									},
									"parameters": [
										{
											"id": 109,
											"name": "row",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 110,
							"name": "renderExpansion",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 338,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 111,
									"name": "renderExpansion",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Allows rendering a node after the row."
									},
									"parameters": [
										{
											"id": 112,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"name": "VNode"
											}
										]
									}
								}
							]
						},
						{
							"id": 113,
							"name": "rowClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 342,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 114,
									"name": "rowClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "A function to calculate the class or classes of the row from the cellData."
									},
									"parameters": [
										{
											"id": 115,
											"name": "row",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "Record"
											}
										]
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								99,
								100,
								105,
								106,
								116,
								117
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								101,
								107,
								110,
								113
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 310,
							"character": 14
						}
					]
				},
				{
					"id": 118,
					"name": "EsTableDetail",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 119,
							"name": "cells",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "A record of table cell definitions."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 358,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 438,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "TableCells"
							}
						},
						{
							"id": 120,
							"name": "columns",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The order and keys of the cells to be rendered. If omitted, all cells will be rendered."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 362,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 121,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The data to render."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 366,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 122,
							"name": "identifier",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Passed to cell renderer as `parent`."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 370,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								119,
								120,
								121,
								122
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 354,
							"character": 14
						}
					]
				},
				{
					"id": 123,
					"name": "EsTableDetailHeader",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 124,
							"name": "actionsCell",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Which cell to place in the top right as a list of actions."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 376,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 125,
							"name": "cells",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "A record of table cell definitions."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 380,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 438,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "TableCells"
							}
						},
						{
							"id": 126,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The data to render."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 384,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 127,
							"name": "identifier",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Passed to cell renderer as `parent`."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 388,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 128,
							"name": "titleKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The key of the title in the data"
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 392,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								124,
								125,
								126,
								127,
								128
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 372,
							"character": 14
						}
					]
				},
				{
					"id": 129,
					"name": "EsTableNested",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 130,
							"name": "activePath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A path to a the currently active row, to auto expand its parent and show it as selected."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 398,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 135,
							"name": "cells",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "A record of table cell definitions.Some built in cells are cells are available for use: - `--borderless`: A blank placeholder cell with no border, for aligning with the parent cell. - `--no-pad`: A blank placeholder cell, for aligning with the parent cell. - `expander`: The expander button."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 406,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 438,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "TableCells"
							}
						},
						{
							"id": 136,
							"name": "columns",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The order and keys of the cells to be rendered. If omitted, all cells will be rendered."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 410,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 155,
							"name": "nestedColumns",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The order and keys of the cells to be rendered in a nested table. If omitted, all cells will be rendered."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 434,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 156,
							"name": "nestedIdentifier",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Passed to cell renderer as `parent`."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 438,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 157,
							"name": "nestedRowTakesFocus",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "If the nested rows should be allowed to take focus."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 442,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 158,
							"name": "outerIdentifier",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Passed to cell renderer as `parent`."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 446,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 162,
							"name": "rowTakesFocus",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "If rows should be allowed to take focus"
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 456,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 163,
							"name": "rows",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "An array of rows to render. Each item in the array is passed to getCellData, to allow passing keys or other identifiers."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 460,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 131,
							"name": "canExpand",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 402,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 132,
									"name": "canExpand",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Function to decide if a row can take expand, to show a nested table."
									},
									"parameters": [
										{
											"id": 133,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 134,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 137,
							"name": "getCellData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 414,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 138,
									"name": "getCellData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sync function for extracting the data from the row. By default, it assumes you passed an array of data as your columns."
									},
									"typeParameter": [
										{
											"id": 139,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 140,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 141,
							"name": "getNestedCellData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 418,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 142,
									"name": "getNestedCellData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sync function for extracting the data from the nested row. By default, it assumes you passed an array of data as your columns."
									},
									"typeParameter": [
										{
											"id": 143,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 144,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 145,
							"name": "getNestedRows",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 422,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 146,
									"name": "getNestedRows",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sync function for extracting a list of rows for the nested table"
									},
									"parameters": [
										{
											"id": 147,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 148,
							"name": "linkRowTo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 426,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 149,
									"name": "linkRowTo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "A function to calculate a href from the cell data."
									},
									"parameters": [
										{
											"id": 150,
											"name": "row",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 151,
							"name": "loadNested",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 430,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 152,
									"name": "loadNested",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "async function for loading nested data when a row is expanded."
									},
									"parameters": [
										{
											"id": 153,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 154,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 159,
							"name": "rowClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 450,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 160,
									"name": "rowClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "A function to calculate the class or classes of the row from the cellData."
									},
									"parameters": [
										{
											"id": 161,
											"name": "row",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "Record"
											}
										]
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								130,
								135,
								136,
								155,
								156,
								157,
								158,
								162,
								163
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								131,
								137,
								141,
								145,
								148,
								151,
								159
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 394,
							"character": 14
						}
					]
				},
				{
					"id": 164,
					"name": "EsTabs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 165,
							"name": "active",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 463,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 166,
							"name": "activeParam",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 464,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": false
									}
								]
							}
						},
						{
							"id": 167,
							"name": "tabs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 465,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 456,
									"name": "Tab"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								165,
								166,
								167
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 462,
							"character": 14
						}
					]
				},
				{
					"id": 168,
					"name": "EsThinkingButton",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 172,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 469,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "ButtonColor"
							}
						},
						{
							"id": 173,
							"name": "completeIcon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 470,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 174,
							"name": "defaultIcon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 471,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 175,
							"name": "disabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 472,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 176,
							"name": "failedIcon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 473,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 177,
							"name": "text",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 474,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 178,
							"name": "thinkingIcon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 475,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 179,
							"name": "variant",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 476,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "ButtonVariant"
							}
						},
						{
							"id": 169,
							"name": "action",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 468,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 170,
									"name": "action",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 171,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								172,
								173,
								174,
								175,
								176,
								177,
								178,
								179
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								169
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 467,
							"character": 14
						}
					]
				},
				{
					"id": 180,
					"name": "EsToast",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 183,
							"name": "count",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 480,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 184,
							"name": "icon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 481,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 185,
							"name": "level",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 482,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Level"
							}
						},
						{
							"id": 181,
							"name": "close",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 479,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 182,
									"name": "close",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								183,
								184,
								185
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								181
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 478,
							"character": 14
						}
					]
				},
				{
					"id": 186,
					"name": "EsToaster",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 187,
							"name": "popToast",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 485,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 188,
									"name": "popToast",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 189,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Bread"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								187
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 484,
							"character": 14
						}
					]
				},
				{
					"id": 190,
					"name": "EsWizard",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 191,
							"name": "location",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 488,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 192,
							"name": "pages",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 489,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 452,
									"name": "WizardPage"
								}
							}
						},
						{
							"id": 193,
							"name": "scrollOffset",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 490,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								191,
								192,
								193
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 487,
							"character": 14
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2,
						5,
						12,
						18,
						24,
						40,
						44,
						47,
						51,
						59,
						62,
						76,
						79,
						83,
						92,
						95,
						96,
						98,
						118,
						123,
						129,
						164,
						168,
						180,
						186,
						190
					]
				}
			],
			"sources": [
				{
					"fileName": "components.d.ts",
					"line": 22,
					"character": 17
				}
			]
		},
		{
			"id": 194,
			"name": "JSX",
			"kind": 2,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 195,
					"name": "EsAccordian",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 196,
							"name": "sections",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "An array of sections to display."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 684,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 432,
									"name": "AccordianSection"
								}
							}
						},
						{
							"id": 197,
							"name": "steps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Display numbered counters beside each title."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 688,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								196,
								197
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 680,
							"character": 14
						}
					]
				},
				{
					"id": 198,
					"name": "EsBackdrop",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 205,
							"name": "showBackdrop",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 693,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 199,
							"name": "onClosed",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 691,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 200,
									"name": "onClosed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 201,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "CustomEvent"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 202,
							"name": "onRequestClose",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 692,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 203,
									"name": "onRequestClose",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 204,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "CustomEvent"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								205
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								199,
								202
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 690,
							"character": 14
						}
					]
				},
				{
					"id": 206,
					"name": "EsBadge",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 207,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Choose the color variant of the badge"
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 699,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "BadgeColor"
							}
						},
						{
							"id": 208,
							"name": "count",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "What number to display in the counter (or if the dot should display)"
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 703,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 209,
							"name": "showZero",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Show the dot and counter even if the count 0 (or negative)"
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 707,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 210,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The base size (in px) of the counter (has no effect on the dot)"
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 711,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 211,
							"name": "variant",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Select the display variant of the badge"
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 715,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "BadgeVariant"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								207,
								208,
								209,
								210,
								211
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 695,
							"character": 14
						}
					]
				},
				{
					"id": 212,
					"name": "EsButton",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 213,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Which color pair the button should use."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 721,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "ButtonColor"
							}
						},
						{
							"id": 214,
							"name": "disabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "If the button is disabled. Prevents the user from interacting with the button: it cannot be pressed or focused."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 725,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 215,
							"name": "form",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The form element to associate the button with (it's form owner)."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 729,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 216,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The default behavior of the button."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 733,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 217,
							"name": "variant",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Which styling variant to use."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 737,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "ButtonVariant"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								213,
								214,
								215,
								216,
								217
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 717,
							"character": 14
						}
					]
				},
				{
					"id": 218,
					"name": "EsButtonLink",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 219,
							"name": "anchorClass",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Class for the contained anchor element"
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 743,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 220,
							"name": "anchorId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Id for the contained anchor element"
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 747,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 221,
							"name": "anchorRole",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Role for the contained anchor element"
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 751,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 222,
							"name": "anchorTabIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Tab Index for the contained anchor element"
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 755,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 223,
							"name": "anchorTitle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Title for the contained anchor element"
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 759,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 224,
							"name": "ariaHaspopup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 763,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 225,
							"name": "ariaLabel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Fefines a string value that labels the current element."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 767,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 226,
							"name": "ariaPosinset",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines an element's number or position in the current set of listitems or treeitems."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 771,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 227,
							"name": "ariaSetsize",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the number of items in the current set of listitems or treeitems."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 775,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 228,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Which color pair the button should use."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 779,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "ButtonColor"
							}
						},
						{
							"id": 229,
							"name": "disabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "If the link is disabled. Prevents the user from interacting with the link: it cannot be pressed or focused."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 783,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 230,
							"name": "forceRefresh",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "If the button should navigate within the router context, or force a refresh."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 787,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 231,
							"name": "target",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Target for link (eg: target=\"_blank\")"
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 791,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 232,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Where the button should link to."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 795,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 233,
							"name": "variant",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Which styling variant to use"
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 799,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "ButtonVariant"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								219,
								220,
								221,
								222,
								223,
								224,
								225,
								226,
								227,
								228,
								229,
								230,
								231,
								232,
								233
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 739,
							"character": 14
						}
					]
				},
				{
					"id": 234,
					"name": "EsCallout",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 235,
							"name": "heading",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Heading text."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 805,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 236,
							"name": "icon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Override the variant icon."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 809,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 237,
							"name": "variant",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Which color set to use."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 813,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "EsCalloutVariant"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								235,
								236,
								237
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 801,
							"character": 14
						}
					]
				},
				{
					"id": 238,
					"name": "EsCopy",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 815,
							"character": 14
						}
					]
				},
				{
					"id": 239,
					"name": "EsCounter",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 240,
							"name": "count",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The number to display"
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 821,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 241,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The height of the counter that the rest of the dimensions scale from"
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 825,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 242,
							"name": "variant",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The display style of the counter."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 829,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "CounterVariant"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								240,
								241,
								242
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 817,
							"character": 14
						}
					]
				},
				{
					"id": 243,
					"name": "EsIcon",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 244,
							"name": "angle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Rotate the icon to a speciied angle."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 835,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 245,
							"name": "icon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Which icon to display."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 839,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 246,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The hight and width to scale the icon to."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 843,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 247,
							"name": "spin",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Apply a spin animation."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 847,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 248,
							"name": "spinDirection",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "When spinning, should it spin clockwise or anticlockwise."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 851,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "clockwise"
									},
									{
										"type": "literal",
										"value": "antiClockwise"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								244,
								245,
								246,
								247,
								248
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 831,
							"character": 14
						}
					]
				},
				{
					"id": 249,
					"name": "EsModal",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 250,
							"name": "footer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "If the modal should have a footer."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 857,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 251,
							"name": "header",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "If the modal should have a header."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 861,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 252,
							"name": "onRequestClose",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 865,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 253,
									"name": "onRequestClose",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Triggers when the modal requests to be closed."
									},
									"parameters": [
										{
											"id": 254,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "CustomEvent"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								250,
								251
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								252
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 853,
							"character": 14
						}
					]
				},
				{
					"id": 255,
					"name": "EsPopover",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 256,
							"name": "attachTo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Pass an element to attach the popover to. (Defaults to the parent element.)"
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 871,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLElement"
							}
						},
						{
							"id": 257,
							"name": "attachmentX",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The Y axis attachment location."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 875,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "AttachmentX"
							}
						},
						{
							"id": 258,
							"name": "attachmentY",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The Y axis attachment location."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 879,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "AttachmentY"
							}
						},
						{
							"id": 259,
							"name": "backdrop",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "If the popover should overlay a backdrop, to prevent external clicks."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 883,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 260,
							"name": "constrain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Constrain the size of the popover to the size of the attachment node."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 887,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Constrain"
							}
						},
						{
							"id": 261,
							"name": "offsetX",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The offset the X axis in pixels."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 891,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 262,
							"name": "offsetY",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The offset the Y axis in pixels."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 895,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 266,
							"name": "open",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Toggles if the popover is open or not."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 903,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 267,
							"name": "popperClass",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Class name for the popper"
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 907,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 268,
							"name": "positionX",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The X axis positioning location."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 911,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "PositionX"
							}
						},
						{
							"id": 269,
							"name": "positionY",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The Y axis positioning location."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 915,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "PositionY"
							}
						},
						{
							"id": 270,
							"name": "target",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A query selecter to select the element to portal the popper to."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 919,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 271,
							"name": "trapFocus",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "If the popover should trap focus within, and return focus on close."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 923,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 263,
							"name": "onRequestClose",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 899,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 264,
									"name": "onRequestClose",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Triggers when the popover requests to close."
									},
									"parameters": [
										{
											"id": 265,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "CustomEvent"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								256,
								257,
								258,
								259,
								260,
								261,
								262,
								266,
								267,
								268,
								269,
								270,
								271
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								263
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 867,
							"character": 14
						}
					]
				},
				{
					"id": 272,
					"name": "EsPopper",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 273,
							"name": "backdrop",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 926,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 277,
							"name": "trapFocus",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 928,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 274,
							"name": "onRequestClose",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 927,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 275,
									"name": "onRequestClose",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 276,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "CustomEvent"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								273,
								277
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								274
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 925,
							"character": 14
						}
					]
				},
				{
					"id": 278,
					"name": "EsPopperInner",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 930,
							"character": 14
						}
					]
				},
				{
					"id": 279,
					"name": "EsPortal",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 280,
							"name": "backdrop",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "If the portal should overlay a backdrop, to prevent external clicks."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 936,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 281,
							"name": "element",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The element to render."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 940,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "VNode"
							}
						},
						{
							"id": 285,
							"name": "open",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "If the element is portaled or not."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 948,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 286,
							"name": "target",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A query selector to select the location to portal to."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 952,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 282,
							"name": "onRequestClose",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 944,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 283,
									"name": "onRequestClose",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Triggers when the popover requests to close."
									},
									"parameters": [
										{
											"id": 284,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "CustomEvent"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								280,
								281,
								285,
								286
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								282
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 932,
							"character": 14
						}
					]
				},
				{
					"id": 287,
					"name": "EsProgression",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 288,
							"name": "checkpoints",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "A list of checkpoints to display."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 958,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Checkpoint"
								}
							}
						},
						{
							"id": 289,
							"name": "location",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The current active location."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 962,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 290,
							"name": "onProgressionRequest",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 966,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 291,
									"name": "onProgressionRequest",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Emitted when a checkpoint is clicked."
									},
									"parameters": [
										{
											"id": 292,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "CustomEvent"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								288,
								289
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								290
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 954,
							"character": 14
						}
					]
				},
				{
					"id": 293,
					"name": "EsResizeObserver",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 294,
							"name": "onSizeChanged",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 972,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 295,
									"name": "onSizeChanged",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Triggered when the size of the element changes."
									},
									"parameters": [
										{
											"id": 296,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "DOMRectReadOnly"
													}
												],
												"name": "CustomEvent"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								294
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 968,
							"character": 14
						}
					]
				},
				{
					"id": 297,
					"name": "EsStatus",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 298,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 975,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Status"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								298
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 974,
							"character": 14
						}
					]
				},
				{
					"id": 299,
					"name": "EsTable",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 300,
							"name": "cells",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "A record of table cell definitions."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 981,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 438,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "TableCells"
							}
						},
						{
							"id": 301,
							"name": "columns",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The order and keys of the cells to be rendered. If omitted, all cells will be rendered."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 985,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 306,
							"name": "headless",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Do not render header."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 993,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 307,
							"name": "identifier",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Passed to cell renderer as `parent`."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 997,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 320,
							"name": "rowTakesFocus",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "If rows should be allowed to take focus"
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1019,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 321,
							"name": "rows",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "An array of rows to render. Each item in the array is passed to getCellData, to allow passing keys or other identifiers."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1023,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 302,
							"name": "getCellData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 989,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 303,
									"name": "getCellData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sync function for extracting the data from the row. By default, it assumes you passed an array of data as your columns."
									},
									"typeParameter": [
										{
											"id": 304,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"parameters": [
										{
											"id": 305,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 308,
							"name": "linkRowTo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1001,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 309,
									"name": "linkRowTo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "A function to calculate a href from the cell data."
									},
									"parameters": [
										{
											"id": 310,
											"name": "row",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 311,
							"name": "onClickRow",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1005,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 312,
									"name": "onClickRow",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Triggered whenever a row is clicked. The `detail` is the item in the row array."
									},
									"parameters": [
										{
											"id": 313,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "CustomEvent"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 314,
							"name": "renderExpansion",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1009,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 315,
									"name": "renderExpansion",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Allows rendering a node after the row."
									},
									"parameters": [
										{
											"id": 316,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"name": "VNode"
											}
										]
									}
								}
							]
						},
						{
							"id": 317,
							"name": "rowClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1013,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 318,
									"name": "rowClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "A function to calculate the class or classes of the row from the cellData."
									},
									"parameters": [
										{
											"id": 319,
											"name": "row",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "Record"
											}
										]
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								300,
								301,
								306,
								307,
								320,
								321
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								302,
								308,
								311,
								314,
								317
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 977,
							"character": 14
						}
					]
				},
				{
					"id": 322,
					"name": "EsTableDetail",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 323,
							"name": "cells",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "A record of table cell definitions."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1029,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 438,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "TableCells"
							}
						},
						{
							"id": 324,
							"name": "columns",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The order and keys of the cells to be rendered. If omitted, all cells will be rendered."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1033,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 325,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The data to render."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1037,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 326,
							"name": "identifier",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Passed to cell renderer as `parent`."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1041,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								323,
								324,
								325,
								326
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 1025,
							"character": 14
						}
					]
				},
				{
					"id": 327,
					"name": "EsTableDetailHeader",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 328,
							"name": "actionsCell",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Which cell to place in the top right as a list of actions."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1047,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 329,
							"name": "cells",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "A record of table cell definitions."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1051,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 438,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "TableCells"
							}
						},
						{
							"id": 330,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The data to render."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1055,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 331,
							"name": "identifier",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Passed to cell renderer as `parent`."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1059,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 332,
							"name": "titleKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The key of the title in the data"
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1063,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								328,
								329,
								330,
								331,
								332
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 1043,
							"character": 14
						}
					]
				},
				{
					"id": 333,
					"name": "EsTableNested",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 334,
							"name": "activePath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A path to a the currently active row, to auto expand its parent and show it as selected."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1069,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 339,
							"name": "cells",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "A record of table cell definitions.Some built in cells are cells are available for use: - `--borderless`: A blank placeholder cell with no border, for aligning with the parent cell. - `--no-pad`: A blank placeholder cell, for aligning with the parent cell. - `expander`: The expander button."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1077,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 438,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "TableCells"
							}
						},
						{
							"id": 340,
							"name": "columns",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The order and keys of the cells to be rendered. If omitted, all cells will be rendered."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1081,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 359,
							"name": "nestedColumns",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The order and keys of the cells to be rendered in a nested table. If omitted, all cells will be rendered."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1105,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 360,
							"name": "nestedIdentifier",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Passed to cell renderer as `parent`."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1109,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 361,
							"name": "nestedRowTakesFocus",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "If the nested rows should be allowed to take focus."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1113,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 371,
							"name": "outerIdentifier",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Passed to cell renderer as `parent`."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1125,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 375,
							"name": "rowTakesFocus",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "If rows should be allowed to take focus"
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1135,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 376,
							"name": "rows",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "An array of rows to render. Each item in the array is passed to getCellData, to allow passing keys or other identifiers."
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1139,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 335,
							"name": "canExpand",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1073,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 336,
									"name": "canExpand",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Function to decide if a row can take expand, to show a nested table."
									},
									"parameters": [
										{
											"id": 337,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 338,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 341,
							"name": "getCellData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1085,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 342,
									"name": "getCellData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sync function for extracting the data from the row. By default, it assumes you passed an array of data as your columns."
									},
									"typeParameter": [
										{
											"id": 343,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 344,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 345,
							"name": "getNestedCellData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1089,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 346,
									"name": "getNestedCellData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sync function for extracting the data from the nested row. By default, it assumes you passed an array of data as your columns."
									},
									"typeParameter": [
										{
											"id": 347,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 348,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 349,
							"name": "getNestedRows",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1093,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 350,
									"name": "getNestedRows",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sync function for extracting a list of rows for the nested table"
									},
									"parameters": [
										{
											"id": 351,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 352,
							"name": "linkRowTo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1097,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 353,
									"name": "linkRowTo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "A function to calculate a href from the cell data."
									},
									"parameters": [
										{
											"id": 354,
											"name": "row",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 355,
							"name": "loadNested",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1101,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 356,
									"name": "loadNested",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "async function for loading nested data when a row is expanded."
									},
									"parameters": [
										{
											"id": 357,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 358,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 362,
							"name": "onClickRow",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1117,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 363,
									"name": "onClickRow",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Triggered whenever a row (or nested row) is clicked. The `detail` is the item in the row array."
									},
									"parameters": [
										{
											"id": 364,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "CustomEvent"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 365,
							"name": "onExpansion",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1121,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 366,
									"name": "onExpansion",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Triggered whenever a row is expanded."
									},
									"parameters": [
										{
											"id": 367,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reflection",
														"declaration": {
															"id": 368,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 369,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "components.d.ts",
																			"line": 1121,
																			"character": 46
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																},
																{
																	"id": 370,
																	"name": "key",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "components.d.ts",
																			"line": 1121,
																			"character": 57
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		369,
																		370
																	]
																}
															]
														}
													}
												],
												"name": "CustomEvent"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 372,
							"name": "rowClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1129,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 373,
									"name": "rowClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "A function to calculate the class or classes of the row from the cellData."
									},
									"parameters": [
										{
											"id": 374,
											"name": "row",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "Record"
											}
										]
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								334,
								339,
								340,
								359,
								360,
								361,
								371,
								375,
								376
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								335,
								341,
								345,
								349,
								352,
								355,
								362,
								365,
								372
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 1065,
							"character": 14
						}
					]
				},
				{
					"id": 377,
					"name": "EsTabs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 378,
							"name": "active",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1142,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 379,
							"name": "activeParam",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1143,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": false
									}
								]
							}
						},
						{
							"id": 383,
							"name": "tabs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1145,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 456,
									"name": "Tab"
								}
							}
						},
						{
							"id": 380,
							"name": "onTabChange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1144,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 381,
									"name": "onTabChange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 382,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "CustomEvent"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								378,
								379,
								383
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								380
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 1141,
							"character": 14
						}
					]
				},
				{
					"id": 384,
					"name": "EsThinkingButton",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 388,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1149,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "ButtonColor"
							}
						},
						{
							"id": 389,
							"name": "completeIcon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1150,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 390,
							"name": "defaultIcon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1151,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 391,
							"name": "disabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1152,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 392,
							"name": "failedIcon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1153,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 393,
							"name": "text",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1154,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 394,
							"name": "thinkingIcon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1155,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 395,
							"name": "variant",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1156,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "ButtonVariant"
							}
						},
						{
							"id": 385,
							"name": "action",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1148,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 386,
									"name": "action",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 387,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								388,
								389,
								390,
								391,
								392,
								393,
								394,
								395
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								385
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 1147,
							"character": 14
						}
					]
				},
				{
					"id": 396,
					"name": "EsToast",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 397,
							"name": "count",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1159,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 398,
							"name": "icon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1160,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 399,
							"name": "level",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1161,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Level"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								397,
								398,
								399
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 1158,
							"character": 14
						}
					]
				},
				{
					"id": 400,
					"name": "EsToaster",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 1163,
							"character": 14
						}
					]
				},
				{
					"id": 401,
					"name": "EsWizard",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 402,
							"name": "location",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1166,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 403,
							"name": "pages",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1167,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 452,
									"name": "WizardPage"
								}
							}
						},
						{
							"id": 404,
							"name": "scrollOffset",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1168,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								402,
								403,
								404
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 1165,
							"character": 14
						}
					]
				},
				{
					"id": 405,
					"name": "IntrinsicElements",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 406,
							"name": "es-accordian",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1171,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 195,
								"name": "EsAccordian"
							}
						},
						{
							"id": 407,
							"name": "es-backdrop",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1172,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 198,
								"name": "EsBackdrop"
							}
						},
						{
							"id": 408,
							"name": "es-badge",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1173,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 206,
								"name": "EsBadge"
							}
						},
						{
							"id": 409,
							"name": "es-button",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1174,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 212,
								"name": "EsButton"
							}
						},
						{
							"id": 410,
							"name": "es-button-link",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1175,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 218,
								"name": "EsButtonLink"
							}
						},
						{
							"id": 411,
							"name": "es-callout",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1176,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 234,
								"name": "EsCallout"
							}
						},
						{
							"id": 412,
							"name": "es-copy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1177,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 238,
								"name": "EsCopy"
							}
						},
						{
							"id": 413,
							"name": "es-counter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1178,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 239,
								"name": "EsCounter"
							}
						},
						{
							"id": 414,
							"name": "es-icon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1179,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 243,
								"name": "EsIcon"
							}
						},
						{
							"id": 415,
							"name": "es-modal",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1180,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 249,
								"name": "EsModal"
							}
						},
						{
							"id": 416,
							"name": "es-popover",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1181,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 255,
								"name": "EsPopover"
							}
						},
						{
							"id": 417,
							"name": "es-popper",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1182,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 272,
								"name": "EsPopper"
							}
						},
						{
							"id": 418,
							"name": "es-popper-inner",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1183,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 278,
								"name": "EsPopperInner"
							}
						},
						{
							"id": 419,
							"name": "es-portal",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1184,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 279,
								"name": "EsPortal"
							}
						},
						{
							"id": 420,
							"name": "es-progression",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1185,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 287,
								"name": "EsProgression"
							}
						},
						{
							"id": 421,
							"name": "es-resize-observer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1186,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 293,
								"name": "EsResizeObserver"
							}
						},
						{
							"id": 422,
							"name": "es-status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1187,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 297,
								"name": "EsStatus"
							}
						},
						{
							"id": 423,
							"name": "es-table",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1188,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 299,
								"name": "EsTable"
							}
						},
						{
							"id": 424,
							"name": "es-table-detail",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1189,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 322,
								"name": "EsTableDetail"
							}
						},
						{
							"id": 425,
							"name": "es-table-detail-header",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1190,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 327,
								"name": "EsTableDetailHeader"
							}
						},
						{
							"id": 426,
							"name": "es-table-nested",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1191,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 333,
								"name": "EsTableNested"
							}
						},
						{
							"id": 427,
							"name": "es-tabs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1192,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 377,
								"name": "EsTabs"
							}
						},
						{
							"id": 428,
							"name": "es-thinking-button",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1193,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 384,
								"name": "EsThinkingButton"
							}
						},
						{
							"id": 429,
							"name": "es-toast",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1194,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 396,
								"name": "EsToast"
							}
						},
						{
							"id": 430,
							"name": "es-toaster",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1195,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 400,
								"name": "EsToaster"
							}
						},
						{
							"id": 431,
							"name": "es-wizard",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components.d.ts",
									"line": 1196,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 401,
								"name": "EsWizard"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								406,
								407,
								408,
								409,
								410,
								411,
								412,
								413,
								414,
								415,
								416,
								417,
								418,
								419,
								420,
								421,
								422,
								423,
								424,
								425,
								426,
								427,
								428,
								429,
								430,
								431
							]
						}
					],
					"sources": [
						{
							"fileName": "components.d.ts",
							"line": 1170,
							"character": 14
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						195,
						198,
						206,
						212,
						218,
						234,
						238,
						239,
						243,
						249,
						255,
						272,
						278,
						279,
						287,
						293,
						297,
						299,
						322,
						327,
						333,
						377,
						384,
						396,
						400,
						401,
						405
					]
				}
			],
			"sources": [
				{
					"fileName": "components.d.ts",
					"line": 679,
					"character": 18
				}
			]
		},
		{
			"id": 432,
			"name": "AccordianSection",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 436,
					"name": "collapsable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "If the section should be collapseable."
					},
					"sources": [
						{
							"fileName": "components/es-accordian/types.ts",
							"line": 25,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 437,
					"name": "defaultCollapsed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "If the section should be collapsed by default."
					},
					"sources": [
						{
							"fileName": "components/es-accordian/types.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 433,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The name of the section. Used as the slot identifier and id."
					},
					"sources": [
						{
							"fileName": "components/es-accordian/types.ts",
							"line": 7,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 435,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The title to display in the header."
					},
					"sources": [
						{
							"fileName": "components/es-accordian/types.ts",
							"line": 21,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 434,
					"name": "variant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Apply styling to a section",
						"text": "'default': Default styling.\n'mega': For containing es-mega-input.\n'field': For containing inputs and other fields.\n'text': For containing text blocks.\n'footer': Applies specific styles to inserted buttons.\n"
					},
					"sources": [
						{
							"fileName": "components/es-accordian/types.ts",
							"line": 17,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "SectionVariant"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						436,
						437,
						433,
						435,
						434
					]
				}
			],
			"sources": [
				{
					"fileName": "components/es-accordian/types.ts",
					"line": 3,
					"character": 17
				}
			]
		},
		{
			"id": 456,
			"name": "Tab",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 457,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "components/es-tabs/types.ts",
							"line": 4,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 461,
					"name": "panelVariant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "components/es-tabs/types.ts",
							"line": 7,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "PanelVariant"
					}
				},
				{
					"id": 458,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "components/es-tabs/types.ts",
							"line": 5,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 459,
					"name": "badge",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "components/es-tabs/types.ts",
							"line": 6,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 460,
							"name": "badge",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						457,
						461,
						458
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						459
					]
				}
			],
			"sources": [
				{
					"fileName": "components/es-tabs/types.ts",
					"line": 3,
					"character": 17
				}
			]
		},
		{
			"id": 440,
			"name": "TableCell",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "A single table cell definition."
			},
			"children": [
				{
					"id": 447,
					"name": "class",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Pass a custom class function, string or record to apply to the cell."
					},
					"sources": [
						{
							"fileName": "components/es-table/types.ts",
							"line": 40,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Record"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 448,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 449,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 450,
													"name": "d",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "T"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "boolean"
															}
														],
														"name": "Record"
													}
												]
											}
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 441,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The title to be placed in the header. Pass an empty string to leave blank."
					},
					"sources": [
						{
							"fileName": "components/es-table/types.ts",
							"line": 24,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 446,
					"name": "variant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Allows specifiying a predefined variant for the cell.\n- `default`: The default styling.\n- `no-pad`: Removes padding.\n- `borderless`: Removes border.\n- `centered`: Center aligns the content.\n- `full-width`:  Breaks the cell onto its own row, taking the full width. **Only use on last cell of row**\n- `exclude`: Disables the cell."
					},
					"sources": [
						{
							"fileName": "components/es-table/types.ts",
							"line": 38,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "TableCellVariant"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "TableCellVariant"
								}
							}
						]
					}
				},
				{
					"id": 445,
					"name": "width",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Allows passing a [track sizing function](https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-columns#values) for use in the grid."
					},
					"sources": [
						{
							"fileName": "components/es-table/types.ts",
							"line": 28,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 442,
					"name": "cell",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "components/es-table/types.ts",
							"line": 26,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 443,
							"name": "cell",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "The cell renderer. By default it will take the it's key in in the record, and extract that key from the row data."
							},
							"parameters": [
								{
									"id": 444,
									"name": "d",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "CellProps"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "VNode"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "VNode"
										}
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						447,
						441,
						446,
						445
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						442
					]
				}
			],
			"sources": [
				{
					"fileName": "components/es-table/types.ts",
					"line": 22,
					"character": 17
				}
			],
			"typeParameter": [
				{
					"id": 451,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			]
		},
		{
			"id": 452,
			"name": "WizardPage",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 455,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "components/es-wizard/types.ts",
							"line": 4,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": true
					}
				},
				{
					"id": 453,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "components/es-wizard/types.ts",
							"line": 2,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 454,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "components/es-wizard/types.ts",
							"line": 3,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						455,
						453,
						454
					]
				}
			],
			"sources": [
				{
					"fileName": "components/es-wizard/types.ts",
					"line": 1,
					"character": 17
				}
			]
		},
		{
			"id": 438,
			"name": "TableCells",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "A record of table cell definitions."
			},
			"sources": [
				{
					"fileName": "components/es-table/types.ts",
					"line": 47,
					"character": 12
				}
			],
			"typeParameter": [
				{
					"id": 439,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"id": 440,
						"typeArguments": [
							{
								"type": "reference",
								"name": "T"
							}
						],
						"name": "TableCell"
					}
				],
				"name": "Record"
			}
		},
		{
			"id": 484,
			"name": "iconStore",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "utils/iconStore.ts",
					"line": 25,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"name": "IconStore"
			},
			"defaultValue": "..."
		},
		{
			"id": 462,
			"name": "toast",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "utils/toast.ts",
					"line": 17,
					"character": 13
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 463,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 479,
							"name": "error",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 480,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 481,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 482,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"name": "Bread"
															},
															{
																"type": "literal",
																"value": "level"
															}
														],
														"name": "Omit"
													}
												},
												{
													"id": 483,
													"name": "targetDocument",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Document"
													},
													"defaultValue": "..."
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 469,
							"name": "info",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 470,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 471,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 472,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"name": "Bread"
															},
															{
																"type": "literal",
																"value": "level"
															}
														],
														"name": "Omit"
													}
												},
												{
													"id": 473,
													"name": "targetDocument",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Document"
													},
													"defaultValue": "..."
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 464,
							"name": "success",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 465,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 466,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 467,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"name": "Bread"
															},
															{
																"type": "literal",
																"value": "level"
															}
														],
														"name": "Omit"
													}
												},
												{
													"id": 468,
													"name": "targetDocument",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Document"
													},
													"defaultValue": "..."
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 474,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 475,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 476,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 477,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"name": "Bread"
															},
															{
																"type": "literal",
																"value": "level"
															}
														],
														"name": "Omit"
													}
												},
												{
													"id": 478,
													"name": "targetDocument",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Document"
													},
													"defaultValue": "..."
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							},
							"defaultValue": "..."
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								479,
								469,
								464,
								474
							]
						}
					]
				}
			},
			"defaultValue": "..."
		}
	],
	"groups": [
		{
			"title": "Namespaces",
			"kind": 2,
			"children": [
				1,
				194
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				432,
				456,
				440,
				452
			]
		},
		{
			"title": "Type aliases",
			"kind": 4194304,
			"children": [
				438
			]
		},
		{
			"title": "Variables",
			"kind": 32,
			"children": [
				484,
				462
			]
		}
	],
	"sources": [
		{
			"fileName": "index.ts",
			"line": 1,
			"character": 0
		}
	]
}