import { MDXLayoutProps } from '@eventstore/stencil-markdown-plugin';
import type { FunctionalComponent, JsonDocs } from '@stencil/core/internal';
import {
    optionallyRequireDocs,
    requirePackageJson,
    requireReadme,
} from './requires';

export interface SectionDefinition {
    title: string;
    children: LibDefinition[];
}

export interface LibDefinition {
    /*
     * Library short name
     */
    title: string;
    /*
     * path to files from repo root
     */
    filePath: string;
}

interface Section {
    id: string;
    title: string;
    children: Lib[];
}

export interface Lib extends LibDefinition {
    /*
     * docs generated by stencil
     */
    docs?: JsonDocs;
    /*
     * readmes
     */
    readme: FunctionalComponent<MDXLayoutProps>;
    /*
     * base url path
     */
    slug: string;
    /*
     * resolved package.json
     */
    packageJson: PackageJson;
}

export interface PackageJson {
    name: string;
    version: string;
    description: string;
    scripts?: Record<string, string>;
    dependencies?: Record<string, string>;
    devDependencies?: Record<string, string>;
}

export const expandSitemap = (sitemap: SectionDefinition[]): Section[] =>
    sitemap.map(expandSection);

const expandSection = (section: SectionDefinition) => ({
    id: slugize(section.title),
    title: section.title,
    children: section.children.map(expandLib),
});

const expandLib = ({ title, filePath }: LibDefinition): Lib => ({
    title,
    slug: slugize(title),
    filePath,
    packageJson: requirePackageJson(`${filePath}/package.json`),
    docs: optionallyRequireDocs(slugize(title)),
    readme: requireReadme(`${filePath}/readme.md`),
});

const slugize = (str: string) => str.toLowerCase().replace(' ', '-');

// const joinPath = (...paths: string[]) => {
//     const result = [];

//     for (const path of paths) {
//         for (const slug of path.split('/')) {
//             switch (slug) {
//                 case '..': {
//                     result.pop();
//                     break;
//                 }
//                 case '.': {
//                     // do nothing
//                     break;
//                 }
//                 default: {
//                     result.push(slug);
//                     break;
//                 }
//             }
//         }
//     }

//     return result.join('/').replace('//', '/');
// };
